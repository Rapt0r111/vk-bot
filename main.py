import datetime
import json
import random
import time
from threading import Thread

import numpy as np
import requests

import vk_api
from bs4 import BeautifulSoup
from vk_api.bot_longpoll import VkBotEventType, VkBotLongPoll

import config
from weather import weather, weather_today, weather_tomorrow

vk_session = vk_api.VkApi(token=config.token)
vk = vk_session.get_api()
group_id = config.group_id



headers = {"accept": "*/*",
           "user-agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (XHTML, like Gecko) "
                         "Chrome/95.0.4638.69 Safari/537.36"}


def get_url(url):
    s = requests.Session()
    return s.get(url=url, headers=headers)


def get_user_info(user_id):
    return vk.users.get(user_ids=user_id)


def get_random_id():
    return np.random.randint(0, 100000000)


def attach(peer_id, query_json, id_group, value, first, last, times):
    for _ in range(times):
        ok = True
        while ok:
            # noinspection PyBroadException
            try:
                vk.messages.send(attachment=f"{value}-{id_group}_{np.random.randint(first, last)}",
                                 peer_id=peer_id, forward=[query_json], random_id=get_random_id())
                ok = False
            except:
                pass


def answer_message(message_id, peer_id, text='', stick=False, attachment='', times=1):
    query_json = json.dumps({"peer_id": peer_id, "conversation_message_ids": [message_id], "is_reply": True})
    if attachment == '–∞–Ω–∏–º–µ':
        attach(peer_id=peer_id, query_json=query_json, id_group=96295942, value='photo', first=457296373,
               last=457326946, times=times)
    elif attachment == '—è–æ–π':
        vk.messages.send(peer_id=peer_id, message='–•—É–π –≤–∞–º. –î–æ —Å–≤–∏–¥–∞–Ω–∏—è. –ö–æ–Ω—Ç–µ–Ω—Ç 18+ –∑–∞–ø—Ä–µ—â—ë–Ω!',
                         random_id=get_random_id())
    elif attachment == '–ø–æ–¥—Ä–æ—á–∏–ª':
        vk.messages.send(peer_id=peer_id, forward=[query_json], random_id=get_random_id(),
                         attachment="photo-200946724_457239654")
    elif attachment == '—Ö–æ—Ä–Ω–∏':
        attach(peer_id=peer_id, query_json=query_json, id_group=189048536, value='photo', first=457245731,
               last=457252600, times=times)
    elif text != '':
        vk.messages.send(peer_id=peer_id, forward=[query_json], message=text, random_id=get_random_id())
    if stick:
        vk.messages.send(peer_id=peer_id, sticker_id=63820, random_id=get_random_id())


def a_time():
    while True:
        if int(datetime.datetime.now().hour) == 21 and int(datetime.datetime.now().minute) == 00 and int(
                datetime.datetime.now().second) == 0:
            vk.messages.send(peer_id=2000000003, message="""
–•–û–•–õ–´ –†–ê–í–ù–Ø–ô–°–¨

üê∑üêñüê∑üêñüêñüê∑
üëïüëïüëïüëïüëïüëï
üëñüëñüëñüëñüëñüëñ

–û–¢–°–¢–ê–í–ò–¢–¨

–†–ê–í–ù–Ø–ô–°–¨

üê∑üêñüêñüêñüêñüêñ
üëïüëïüëïüëïüëïüëï
üëñüëñüëñüëñüëñüëñ

–°–ú–ò–†–ù–û
üê∑üê∑üê∑üê∑üê∑üê∑
üëïüëïüëïüëïüëïüëï
üëñüëñüëñüëñüëñüëñ   """, random_id=get_random_id())
            time.sleep(1)
        if int(datetime.datetime.now().hour) == 5 and int(datetime.datetime.now().minute) == 0 and int(
                datetime.datetime.now().second) == 0:
            vk.messages.send(peer_id=2000000003, message=
"""
–•–û–•–õ–´ –†–ê–í–ù–Ø–ô–°–¨

üê∑üêñüê∑üêñüêñüê∑
üëïüëïüëïüëïüëïüëï
üëñüëñüëñüëñüëñüëñ

–û–¢–°–¢–ê–í–ò–¢–¨

–†–ê–í–ù–Ø–ô–°–¨

üê∑üêñüêñüêñüêñüêñ
üëïüëïüëïüëïüëïüëï
üëñüëñüëñüëñüëñüëñ

–°–ú–ò–†–ù–û
üê∑üê∑üê∑üê∑üê∑üê∑
üëïüëïüëïüëïüëïüëï
üëñüëñüëñüëñüëñüëñ   """, random_id=get_random_id())
            time.sleep(1)
        time.sleep(0.33)


answers = ("–≠—Ç–æ –Ω–µ—Å–æ–º–Ω–µ–Ω–Ω–æ", "–ü–µ—Ä—Å–ø–µ–∫—Ç–∏–≤—ã —Ö–æ—Ä–æ—à–∏–µ", "–ú–æ–∂–µ—Ç–µ –Ω–µ —Å–æ–º–Ω–µ–≤–∞—Ç—å—Å—è",
           "–ú–æ–π –æ—Ç–≤–µ—Ç –Ω–µ—Ç", "–ú–æ–∏ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –≥–æ–≤–æ—Ä—è—Ç –Ω–µ—Ç", "–¢–æ—á–Ω–æ –¥–∞",
           "–î—É–º–∞—é –¥–∞", " –ù–µ—Ç", "–î–∞", "–ë–µ–∑ —Å–æ–º–Ω–µ–Ω–∏–π")
rules = ("""üòçüòòüòçü§™ü•∞Stay Together. Fan club. üòçü•∞üòòü•∞üòõ
–ü—Ä–æ—Å–∏–º —Å–∞–±–ª—é–¥–∞—Ç—å üòô
1 –ù–∏–∫–∞–≤–æ –Ω–∏ –∞–±–∏–∂–∞—Ç—å, –Ω–µ –∞–±–∑—ã–≤–∞—Ü–∞ —Å–∏–Ω–∞ –∏ –æ–±–∏–¥–Ω–∞ ‚ò∫
2 –º–æ—Ç–µ—Ä–∏—Ü–∞ ü§¨–º–æ–∂–Ω–∞ –Ω–æ –Ω–µ –º–Ω–æ–≥–∞üòã
3 —É–≤–æ–∂–∞—Ç—å –∏ —Å–ª—É—à–∞—Ç—å –æ–¥–º–∏–Ω–æ–≤ –±–∏—Å–µ–¥—ã ü§ì
4 –§–ª—É–¥ –Ω–∏–ª—å–∑—è üö´
5 –ø—Ä–µ–≥–ª–æ—à–∞—Ç—å —Ç–æ–ª—å–∫–∞ —Å —Ä–æ–∑—Ä–∏—à–µ–Ω–∏—è –æ–¥–º–∏–Ω–æ–≤üò§
6 –ê—É—Ñ –±–æ–º–±–∏–ª–∞üò±üò±üò±
7 –±—Ñ—É —Ñ–∏–≥–Ω—èü§¢ü§¢
8 –¥–æ–ª–≥–∞ –∞—Ñ–∫ = –∫–∏–∫üòà
9 –ª—é–±–∏—Ç—å –®–ª–µ–ø—É üòçüòç
10 –Ω–∏ –Ω–∞–∑—ã–≤–∞—Ç—å –®–ª–µ–ø—É –°—Ç–µ–ø–æ–π!!!!!!üò°üò°üò°üò°
–ó–∞ –Ω–∞—Ä—É—à–µ–Ω–∏—è –ø—Ä–∞–≤–µ–ª –±–∞–Ω (–∫–∏–∫ –∏–∑ –±–∏—Å–µ–¥—ã) ü§¨ü§Øüò°ü•µ""")


def magic_ball(question):
    if question != '' and question:
        return answers[random.randint(0, len(answers) - 1)]
    else:
        return "–°–ø—Ä–æ—Å–∏ –µ—â–µ —Ä–∞–∑"


def rnd_fact(url):
    # noinspection PyBroadException
    try:
        response = get_url(url)
        soup = BeautifulSoup(response.content, 'html.parser')
        return soup.find('table', {'class': 'text'}).text
    except:
        return '–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —Ö—É–π –≤–∞–º. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ :) –° —É–≤–∞–∂–µ–Ω–∏–µ–º, –ù–∏–Ω–∞ –ü–∞–≤–ª–æ–≤–Ω–∞.'


def rnd_ask(url):
    # noinspection PyBroadException
    try:
        response = get_url(url)
        soup = BeautifulSoup(response.content, 'html.parser')
        data = soup.find('table', {'class': 'text'}).text
        return data.split('‚Äî')[0]
    except:
        return '–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —Ö—É–π –≤–∞–º. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ :) –° —É–≤–∞–∂–µ–Ω–∏–µ–º, –ù–∏–Ω–∞ –ü–∞–≤–ª–æ–≤–Ω–∞.'


longpoll = VkBotLongPoll(vk_session, group_id)


def check_number(message):
    # noinspection PyBroadException
    try:
        if int(message.split()[1]) > 5 or int(message.split()[1]) <= 0:
            return 1
        else:
            return int(message.split()[1])
    except:
        return 1


def who_question():
    j = vk.messages.getConversationMembers(peer_id=2000000003).get('items')
    while True:
        x = int(j[np.random.randint(0, len(j))].get('member_id'))
        if x >= 0:
            return f'–Ø –¥—É–º–∞—é - —ç—Ç–æ @id{x} ({get_user_info(int(x))[0].get("first_name")})'
        else:
            pass

def main():
    while True:
        try:
            for event in longpoll.listen():
                if event.type == VkBotEventType.MESSAGE_NEW:
                    message = event.object.message.get('text').lower()
                    peer_id = event.object.message.get('peer_id')
                    user_id = event.object.message.get('from_id')
                    user_info = get_user_info(int(user_id))
                    print(user_info[0].get('first_name') + ' ' + user_info[0].get('last_name') + ': ' + message)
                    message_id = event.object.message.get('conversation_message_id')
                    if event.from_chat:
                        if user_id != 320585774 and '—è –≥–µ–π' in message:
                            answer_message(message_id=message_id, peer_id=peer_id, text="–ù–µ –ø—Ä–∞–≤–¥–∞", stick=True)
                        elif '!–∞–Ω–∏–º–µ' in message:
                            answer_message(message_id=message_id, peer_id=peer_id, stick=False, attachment='–∞–Ω–∏–º–µ',
                                           times=check_number(message))
                        elif '!—Ö–æ—Ä–Ω–∏' in message:
                            answer_message(message_id=message_id, peer_id=peer_id, stick=False, attachment='—Ö–æ—Ä–Ω–∏',
                                           times=check_number(message))
                        elif '!—è–æ–π' in message:
                            answer_message(message_id=message_id, peer_id=peer_id, stick=False, attachment='—è–æ–π',
                                           times=check_number(message))
                        elif '!–ø–æ–¥—Ä–æ—á–∏–ª' in message:
                            answer_message(message_id=message_id, peer_id=peer_id, stick=False, attachment='–ø–æ–¥—Ä–æ—á–∏–ª',
                                           times=check_number(message))
                        elif '–∏–¥–∏ –Ω–∞—Ö—É–π' in message or '–ø–æ—à—ë–ª –Ω–∞—Ö' in message or '–ø–æ—à–µ–ª –Ω–∞—Ö' in message or '–∏–ª–∏ –Ω–∞—Ö' in message:
                            answer_message(message_id=message_id, peer_id=peer_id, text="–°–∞–º –∏–¥–∏ –Ω–∞—Ö—É–π :(", stick=False)
                        elif '—Ñ–∞–º–∏–ª–∏—è ' in message and '—è–Ω' in message:
                            answer_message(message_id=message_id, peer_id=peer_id, text="–ß—É—Ö–∞–ª—ë–Ω–æ–≤", stick=False)
                        elif '!—Ñ–∞–∫—Ç' in message:
                            vk.messages.send(peer_id=peer_id, message=rnd_fact(url='https://randstuff.ru/fact/'),
                                             random_id=get_random_id())
                        elif '!–º—É–¥—Ä–æ—Å—Ç—å' in message:
                            vk.messages.send(peer_id=peer_id, message=rnd_ask(url='https://randstuff.ru/saying/'),
                                             random_id=get_random_id())
                        #elif '—Å—Ç–∞—Å' in message or '—Å—Ç–∞–Ω–∏—Å' in message:
                        #    answer_message(text="–í–æ–æ–±—â–µ-—Ç–æ –æ–Ω Native English Speaker", message_id=message_id,
                        #                   peer_id=peer_id, stick=False)
                        elif '!—à–∞—Ä' in message:
                            answer_message(message_id=message_id, peer_id=peer_id,
                                           text=magic_ball(question=message[4:].split()), stick=False)
                        elif '!–ø—Ä–∞–≤–∏–ª–∞' in message:
                            vk.messages.send(peer_id=peer_id, message=rules, random_id=get_random_id())
                        elif ' –±–æ—Ç ' in message:
                            answer_message(peer_id=peer_id, message_id=message_id,
                                           text='–ê —Ç—ã –∫–æ–∂–∞–Ω—ã–π —É–±–ª—é–¥–æ–∫. –ò –≤–æ–æ–±—â–µ –∏–¥–∏ –Ω–∞—Ö—É–π.', stick=False)
                        elif '!–∫—Ç–æ' in message or '!–∫–æ–≥–æ' in message:
                            answer_message(peer_id=peer_id, message_id=message_id,
                                           text=who_question(), stick=False)
                        elif '!–ø–æ–≥–æ–¥–∞' in message:
                            answer_message(peer_id=peer_id, message_id=message_id,
                                           text=weather(str('–ø–æ–≥–æ–¥–∞ –ö–∞–ª–∏–Ω–∏–Ω–≥—Ä–∞–¥ —Å–µ–π—á–∞—Å'+message[7:])), stick=False)
                            answer_message(peer_id=peer_id, message_id=message_id,
                                           text=weather_today(), stick=False)
                        elif '!–∑–∞–≤—Ç—Ä–∞' in message:
                            answer_message(peer_id=peer_id, message_id=message_id,
                                           text=weather(str('–ø–æ–≥–æ–¥–∞ –ö–∞–ª–∏–Ω–∏–Ω–≥—Ä–∞–¥ –∑–∞–≤—Ç—Ä–∞'+message[7:])), stick=False)
                            answer_message(peer_id=peer_id, message_id=message_id,
                                           text=weather_tomorrow(), stick=False)
                        # elif '!–∞–≤–∏—Ç–æ' in message:
                        #     x=parser.par()
                        #     print(x)
                        #     for i in x:
                        #         vk.messages.send(peer_id=peer_id, random_id=get_random_id(),
                        #                message=i)

        except Exception as e:
            print(e)

def input_cmd():
    while True:
        command = input()
        if command[:7] == '!–í—ã–≤–µ–¥–∏':
            vk.messages.send(peer_id=2000000003, message=command[7:], random_id=get_random_id())


if __name__ == '__main__':
    t1 = Thread(target=a_time, args=(), daemon=True)
    print(datetime.datetime.now())
    t2 = Thread(target=main, args=())
    t3 = Thread(target=input_cmd, args=())
    t1.start()
    t2.start()
    t3.start()
